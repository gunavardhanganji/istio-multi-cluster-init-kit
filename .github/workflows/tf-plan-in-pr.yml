name: Apply Terraform on PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    if: github.event.review.state != 'approved'
    steps:
    - uses: actions/checkout@v3

    - name: Get PR ID
      id: pr-id
      shell: bash
      env:
        GITHUB_REF: ${{ inputs.github_ref }}
      run: |
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
    
    - name: Authenticate to Google Cloud
      id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Plan
      id: plan
      working-directory: ./terraform
      # working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        echo 'plan<<EOF' >> $GITHUB_OUTPUT
        terraform plan -no-color -out=tfplan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Save Artifact
      id: save-artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.pr_id.outputs.PR_NUMBER }}-tf-plan
        path: ./terraform/tfplan

    - name: Comment Plan
      id: comment-plan
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ steps.pr_id.outputs.PR_NUMBER }}
        body: |
          Terraform Plan:

          ```
          ${{ steps.plan.outputs.plan }}
          ```

          Plan saved to GH artifacts.

  manual-approval:
    runs-on: ubuntu-latest
    needs: [terraform-plan]
    if: github.event_name == 'pull_request'
  
    steps:
    - name: Wait for Approval
      id: approval
      run: echo "::set-output name=approved::true"
  
    - name: Check Approval Status
      run: |
        if [[ "${{ steps.approval.outputs.approved }}" != "true" ]]; then
          echo "Approval not granted. Skipping apply."
          exit 0
        else
          echo "Approval granted. Applying changes."
        fi

  terraform-apply:
    runs-on: ubuntu-latest
    needs: [terraform-plan, manual-approval]

    steps:
    - name: Terraform Apply
      id: apply
      working-directory: ./terraform
      shell: bash
      run: |
        echo 'apply<<EOF' >> $GITHUB_OUTPUT
        terraform apply -input=false -no-color tfplan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Comment Apply
      id: comment-apply
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ steps.pr_id.outputs.PR_NUMBER }}
        body: |
          Terraform Apply:

          ```
          ${{ steps.apply.outputs.apply }}
          ```
