name: Apply Terraform on PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
    
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: ./terraform
      
    - name: Post Plan
      uses: robburger/terraform-pr-commenter@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        EXPAND_SUMMARY_DETAILS: 'false' # Override global environment variable; expand details just for this step
      with:
        commenter_type: plan
        commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
        commenter_exitcode: ${{ steps.plan.outputs.exitcode }}

  manual-approval:
    runs-on: ubuntu-latest
    needs: [terraform-plan]
    if: github.event_name == 'pull_request'
  
    steps:
    - name: Wait for Approval
      id: approval
      run: echo "::set-output name=approved::true"
  
    - name: Check Approval Status
      run: |
        if [[ "${{ steps.approval.outputs.approved }}" != "true" ]]; then
          echo "Approval not granted. Skipping apply."
          exit 0
        else
          echo "Approval granted. Applying changes."
        fi

  terraform-apply:
    runs-on: ubuntu-latest
    needs: [terraform-plan, manual-approval]

    steps:
    - name: Apply Terraform Changes
      run: terraform apply tfplan -auto-approve
